// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wireinject

import (
	"github.com/devanadindraa/Evermos-Backend/database"
	"github.com/devanadindraa/Evermos-Backend/domains/user"
	"github.com/devanadindraa/Evermos-Backend/middlewares"
	"github.com/devanadindraa/Evermos-Backend/routes"
	"github.com/devanadindraa/Evermos-Backend/utils/config"
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
)

import (
	_ "github.com/google/subcommands"
)

// Injectors from wire.go:

func initializeDependency(config2 *config.Config) (*routes.Dependency, error) {
	db, err := database.NewDB(config2)
	if err != nil {
		return nil, err
	}
	service := user.NewService(config2, db)
	middlewaresMiddlewares := middlewares.NewMiddlewares(config2, service)
	validate := NewValidator()
	handler := user.NewHandler(service, validate)
	dependency := routes.NewDependency(config2, middlewaresMiddlewares, db, handler)
	return dependency, nil
}

// wire.go:

var userSet = wire.NewSet(user.NewService, user.NewHandler)

func NewValidator() *validator.Validate {
	return validator.New()
}
